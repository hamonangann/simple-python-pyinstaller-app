node {
    checkout scm
    def remote = [:]
    remote.name = 'root'
    remote.host = '203.145.34.25'
    remote.user = 'root'
    remote.allowAnyHosts = true
    stage('Build') {
        docker.image('python:2-alpine').inside('-v /root/.m2:/root/.m2') {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            stash(name: 'compiled-results', includes: 'sources/*.py*')
        }
    }
    stage('Test') {
        try {
            docker.image('qnib/pytest').inside('-v /root/.m2:/root/.m2') {
                sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }   
        } 
        catch (exc) {
            echo 'Jenkins: Test stage failed'
            throw exc
        } 
        finally {
            docker.image('qnib/pytest').inside('-v /root/.m2:/root/.m2') {
                junit 'test-reports/results.xml'
            }
        }
    }
    stage('Manual Approval') {
        input message: 'Lanjutkan ke tahap Deploy?'
    }
    stage('Deploy') {
        dir(path: env.BUILD_ID) {
            unstash(name: 'compiled-results')
            sh "pwd"
            sh "docker run --rm -v '/var/jenkins_home/workspace/submission-cicd-pipeline-wibucina/${env.BUILD_ID}/sources:/src' 'cdrx/pyinstaller-linux:python2' 'pyinstaller -F add2vals.py'"
        }
        archiveArtifacts "${env.BUILD_ID}/sources/dist/add2vals"  
        dist_location = "${env.BUILD_ID}/sources/dist"      
        withCredentials([sshUserPrivateKey(credentialsId: 'IDCLOUDHOST_PRIVATE_KEY', keyFileVariable: 'identity')]) {
            remote.identityFile = identity
            sshPut remote: remote, from: dist_location, into: '.'
            sshCommand remote: remote, command: "chmod +x ./dist/add2vals"
            sshCommand remote: remote, command: "./dist/add2vals"
        }
        sh "docker run --rm -v '/var/jenkins_home/workspace/submission-cicd-pipeline-wibucina/${env.BUILD_ID}/sources:/src' 'cdrx/pyinstaller-linux:python2' 'rm -rf build dist'"
        sleep 60
    }
}
